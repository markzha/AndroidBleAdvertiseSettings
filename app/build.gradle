apply plugin: 'com.android.application'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.steelmate.androidbleadvertisesettings"
        minSdkVersion 17
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    //签名
    signingConfigs {
        myConfig {
            storeFile file("../keystore/Demo.jks")
            storePassword "123456"
            keyAlias "123456"
            keyPassword "123456"
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            signingConfig signingConfigs.myConfig
            zipAlignEnabled true
            shrinkResources true

            //前一部分代表系统默认的android程序的混淆文件，该文件已经包含了基本的混淆声明，后一个文件是自己的定义混淆文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            signingConfig signingConfigs.myConfig

            //前一部分代表系统默认的android程序的混淆文件，该文件已经包含了基本的混淆声明，后一个文件是自己的定义混淆文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    //打包改名
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            // 名称_android_版本号.apk
            if (buildType.name.equals("debug")) {
                outputFileName = "蓝牙广播_V${defaultConfig.versionName}.apk"
            } else {
                def targetVersion = variant.getMergedFlavor().getTargetSdkVersion().getApiLevel()
                def minVersion = variant.getMergedFlavor().getMinSdkVersion().getApiLevel()
                outputFileName = "蓝牙广播_${releaseTime()}_target${targetVersion}_min${minVersion}_V${defaultConfig.versionName}.apk"
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

// 获取当前系统时间
static def releaseTime() {
    return new Date().format("yyyyMMddHHmm")
}
